<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAB//2Q==
</value>
  </data>
</root>